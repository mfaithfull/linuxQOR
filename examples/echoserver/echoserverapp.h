// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PP_H_EXAMPLES_ECHOSERVER_APP
#define QOR_PP_H_EXAMPLES_ECHOSERVER_APP

#include "src/framework/application/application.h"
#include "src/components/framework/optionparser/ioptionable.h"

class EchoServerApp : public qor::framework::Application, public qor::components::optparser::IOptionable
{
public:

        EchoServerApp() = default;
        virtual ~EchoServerApp() = default;

        
        //IOptionable interface
        virtual const char* ProvideShortOptionString();
        virtual qor::components::optparser::Option* ProvideLongOptions();
        virtual void ReceiveOptionSwitch(char c){}
        virtual void ReceiveOptionParameter(char c, const char* value);
        virtual void ReceiveLongOption(const char* option, const char* value);
        virtual void ReceiveNonOption(const char* parameter){}

        std::string GetPortName();

    private:

        std::string m_portStr;

};

namespace qor{
    qor_pp_declare_instancer_of(EchoServerApp, SingletonInstancer);
}

#endif//QOR_PP_H_EXAMPLES_ECHOSERVER_APP