// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PP_H_INTERCEPTION_PARAMETER_CHECKS_RETURNCHECK
#define QOR_PP_H_INTERCEPTION_PARAMETER_CHECKS_RETURNCHECK

namespace qor {

    template< typename TValue >
    class ReturnCheckBase
    {
    public:

        ReturnCheckBase() = default;
        virtual ~ReturnCheckBase() = default;

        virtual bool Test(TValue& value)
        {
            return false;
        }

        virtual void DefaultInit(TValue& value)
        {
        }

        static void Check(TValue& value, ReturnCheckBase* pInstance)
        {
            if (!pInstance->Test(value))
            {
                //TODO: maybe raise an issue
            }
        }

        static void Init(TValue& value, ReturnCheckBase* pInstance)
        {
            pInstance->DefaultInit(value);
        }
    };

    template< typename TValue >
    class NoReturnCheck : public ReturnCheckBase< TValue >
    {
    public:

        virtual bool Test(TValue& value)
        {
            return true;
        }
    };

}//qor

#endif//QOR_PP_H_INTERCEPTION_PARAMETER_CHECKS_RETURNCHECK
