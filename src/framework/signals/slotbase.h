// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

/***********************************************************************
*
* Copyright (c) 2016-2021 Barbara Geller
* Copyright (c) 2016-2021 Ansel Sermersheim
*
* This file is part of CsSignal.
*
* CsSignal is free software, released under the BSD 2-Clause license.
* For license details refer to LICENSE provided with this project.
*
* CopperSpice is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
*
* https://opensource.org/licenses/BSD-2-Clause
*
***********************************************************************/

#ifndef QOR_PP_H_SIGNALS_SLOTBASE
#define QOR_PP_H_SIGNALS_SLOTBASE

#include <set>

#include "src/platform/compiler/compiler.h"
#include "src/qor/datastructures/rcuguarded.h"
#include "src/qor/datastructures/rculist.h"

namespace qor{

    class SignalBase;
    class PendingSlot;
    enum class ConnectionKind;

    namespace detail
    {
        class BentoAbstract;
    }//detail

    class qor_pp_module_interface(QOR_SIGNALSLOTS) SlotBase
    {
    public:

        SlotBase();
        SlotBase(const SlotBase&);
        virtual ~SlotBase() noexcept(false);

        SignalBase* sender() const;

    protected:

        std::set<SignalBase*> internal_senderList() const;

    private:

        static SignalBase*& get_threadLocal_currentSender();

        // list of possible Senders for this Receiver
        mutable SharedList<const SignalBase*> m_possibleSenders;

        virtual bool compareThreads() const;
        virtual void queueSlot(PendingSlot data, ConnectionKind type);
        friend class SignalBase;
        template<class Sender, class SignalClass, class ...SignalArgTypes, class ...Ts>
        friend void activate(Sender& sender, void (SignalClass::* signal)(SignalArgTypes...), Ts &&... Vs);
        template<class Sender, class Receiver>
        friend bool internal_disconnect(const Sender& sender, const detail::BentoAbstract* signalBento, const Receiver* receiver, const detail::BentoAbstract* slotBento);
    };

}//qor

#endif//QOR_PP_H_SIGNALS_SLOTBASE