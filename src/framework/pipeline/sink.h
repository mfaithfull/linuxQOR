// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PP_H_PIPELINE_SINK
#define QOR_PP_H_PIPELINE_SINK

#include "element.h"
#include "src/framework/signals/signal.h"

namespace qor{ namespace pipeline{

#ifndef QOR_PP_H_PIPELINE_SOURCE
    class qor_pp_module_interface(QOR_PIPELINE) Source;
#endif//QOR_PP_H_PIPELINE_SOURCE

    class qor_pp_module_interface(QOR_PIPELINE) Sink: public virtual Element, public virtual SignalBase
    {
    public:

        qor_pp_signal_func WriteSuccessSignal(size_t unitsWritten);
        qor_pp_signal_func WriteErrorSignal(size_t unitsWritten, size_t error);

        Sink();
        virtual ~Sink() = default;
        Sink( const Sink& src);
        Sink& operator = (const Sink& src);

        virtual void SetSource(Element* source);
        virtual Element* GetSource();
        virtual bool HasSource();

        virtual bool Write(size_t& unitsWritten, size_t unitstoWrite = 1 ) = 0;

        virtual void OnWriteSuccess(size_t unitsWritten);
        virtual void OnWriteError(size_t error, size_t unitsWritten);
        virtual bool IsSink();

    protected:

        Element* m_source;
        Source* ActualSource();

    };

}}//qor::pipeline

#endif//QOR_PP_H_PIPELINE_SINK
