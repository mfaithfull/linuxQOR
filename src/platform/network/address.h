// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PP_H_PLATFORM_NETWORK_ADDRESS
#define QOR_PP_H_PLATFORM_NETWORK_ADDRESS

namespace qor{ namespace network{

#pragma pack(push,1)

    class qor_pp_module_interface(QOR_SOCKETS) Address
    {
    public:

        static const uint32_t byte_size = 30;

        Address();
        Address(unsigned short AddressFamily);
        
        void SetIPV4Address(unsigned char a, unsigned char b, unsigned char c, unsigned char d);
        void SetPort(unsigned short port);
        
        unsigned short sa_family;

        union sa
        {
            char sa_data[byte_size];

            struct BluetoothAddress
            {
                uint64_t		        btAddr;         // Bluetooth device address
                qor::GUID				serviceClassId; // [OPTIONAL] system will query SDP for port
                unsigned long			port;           // RFCOMM channel or L2CAP PSM
            }BluetoothAddress;

            struct IrDaAddress
            {
                unsigned char  irdaDeviceID[4];
                char	irdaServiceName[25];
            }IrDaAddress;

            struct IPAddress
            {
                unsigned short sin_port;
                struct sin_addr
                {
                    union S_un
                    {
                        struct S_un_b
                        {
                            unsigned char s_b1, s_b2, s_b3, s_b4;
                        }b;
                        struct S_un_w
                        {
                            unsigned short s_w1, s_w2;
                        }w;
                        unsigned long S_addr;
                    }S_un;
                }sin_addr;
                char sin_zero[8];
            }IPAddress;
        }sa;
    };

#pragma pack( pop )

}}//qor::network

#endif//QOR_PP_H_PLATFORM_NETWORK_ADDRESS
