// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "src/configuration/configuration.h"

#include <arpa/inet.h>
#include "src/framework/thread/thread.h"
#include "address.h"

namespace qor{ namespace network{

    Address::Address()
    {
        sa_family = 0;
        memset(sa.sa_data, 0, byte_size);
    }
        
    Address::Address(unsigned short AddressFamily) : Address()
    {
        sa_family = AddressFamily;
    }

    void Address::SetIPV4Address(unsigned char a, unsigned char b, unsigned char c, unsigned char d)
    {
        sa.IPAddress.sin_addr.S_un.b.s_b1 = a;
        sa.IPAddress.sin_addr.S_un.b.s_b2 = b;
        sa.IPAddress.sin_addr.S_un.b.s_b3 = c;
        sa.IPAddress.sin_addr.S_un.b.s_b4 = d;
    }

    void Address::SetPort(unsigned short port)
    {
        sa.IPAddress.sin_port = ::htons(static_cast<uint16_t>(port));
    }
    
}}//qor::network
