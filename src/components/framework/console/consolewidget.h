// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PP_H_COMPONENTS_CONSOLE_WIDGET
#define QOR_PP_H_COMPONENTS_CONSOLE_WIDGET

//Base class for Console Widgets

#include "consoleview.h"
#include "position.h"
#include "size.h"

namespace qor { namespace components {

    class qor_pp_module_interface(QOR_CONSOLE) ConsoleWidget
    {
    public:

        ConsoleWidget();
        ~ConsoleWidget();

        Position Move(Position newPosition);
        Size Resize(Size newSize);

        virtual Size Layout(int width, int height) { return {0,0};}
        virtual Size GetMinimumSize() { return {0,0};}
        virtual Size GetDefaultSize() { return {0,0};}
        virtual Size GetMaximumSize() { return {0,0};}
        virtual void Render();
        ref_of<ConsoleView>::type View();
        Position GetPosition() {return m_position;}
        Size GetSize() {return m_size;}
        virtual bool HandleInput(string_t input) {return false;}

    protected:

        ref_of<ConsoleView>::type m_view;
        Position m_position;
        struct Size m_size;
    };

    class qor_pp_module_interface(QOR_CONSOLE) ConsoleLabelWidget : public ConsoleWidget
    {
    public:

        ConsoleLabelWidget();
        ConsoleLabelWidget(const string_t& labelText);
        virtual ~ConsoleLabelWidget() = default;
        void SetText(const string_t& newText);
        string_t GetText();
        virtual Size Layout(int width, int height);
        virtual Size GetMinimumSize();
        virtual Size GetDefaultSize();
        virtual Size GetMaximumSize();
        virtual void Render();
        
    private:
        string_t m_labelText;
    };

}}//qor::components

#endif//QOR_PP_H_COMPONENTS_CONSOLE_WIDGET
