// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PP_H_COMPONENTS_CONSOLE_VIEW_MODEL
#define QOR_PP_H_COMPONENTS_CONSOLE_VIEW_MODEL

#include <vector>
#include "src/qor/reference/reference.h"
#include "src/qor/reference/newref.h"
#include "consolewidget.h"

/*ConsoleViewModel collects ConsoleWidgetModels built by observation of domain models and injection of Style and Console UI specific data*/
namespace qor { namespace components {

    class qor_pp_module_interface(QOR_CONSOLE) ConsoleViewModel
    {
    public:

        ConsoleViewModel();
        ~ConsoleViewModel();

        //AddWidget
        //RemoveWidget
        void Layout(unsigned int width, unsigned int height);// - position and size everything within the contraints of width and height
        //Each widget then renders to it's own view. The views are composited to the main view
        void Render();
        bool HandleInput(string_t input);
        //Add Layer Widgets, Row Widgets, Column Widgets, Grid Widgets, Flow Widgets which exist just as containers to layout their contents
        std::vector<ref_of<ConsoleWidget>::type>::const_iterator cbegin();
        std::vector<ref_of<ConsoleWidget>::type>::const_iterator cend();
        std::vector<ref_of<ConsoleWidget>::type>::iterator begin();
        std::vector<ref_of<ConsoleWidget>::type>::iterator end();

        void AddWidget(ref_of<ConsoleWidget>::type);
        
    private:

        std::vector<ref_of<ConsoleWidget>::type> m_itemVector;
    };

}}//qor::components

#endif//QOR_PP_H_COMPONENTS_CONSOLE_VIEW_MODEL
