// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#include "src/configuration/configuration.h"

#include "consolewidget.h"

namespace qor { namespace components {

    ConsoleLabelWidget::ConsoleLabelWidget() : ConsoleWidget() {}
    
    ConsoleLabelWidget::ConsoleLabelWidget(const string_t& labelText) : ConsoleWidget(), m_labelText(labelText)
    {

    }

    void ConsoleLabelWidget::SetText(const string_t& newText)
    {
        m_labelText = newText;
    }

    string_t ConsoleLabelWidget::GetText()
    {
        return m_labelText;
    }

    Size ConsoleLabelWidget::Layout(int width, int height)
    {
        m_position.m_column = 0;
        m_position.m_row = 0;
        m_size.m_height = 1;
        int length = static_cast<int>(m_labelText.size()+1);
        m_size.m_width = length;
        while(length > width && m_size.m_height < height)
        {
            m_size.m_width = width;
            length -= width;
            m_size.m_height++;
        }
        return m_size;
    }

    Size ConsoleLabelWidget::GetMinimumSize()
    {
        Size minsize = {static_cast<int>(std::min(static_cast<size_t>(6),m_labelText.size()+1)), 1};
        return minsize;
    }

    Size ConsoleLabelWidget::GetDefaultSize()
    {
        Size defaultSize = {static_cast<int>(m_labelText.size()+1), 1};
        return defaultSize;
    }

    Size ConsoleLabelWidget::GetMaximumSize()
    {
        Size maxsize = {static_cast<int>(m_labelText.size()+1), static_cast<int>(m_labelText.size()+1)};
        return maxsize;
    }

    void ConsoleLabelWidget::Render()
    {
        m_view->SetWidth(m_size.m_width);
        m_view->SetHeight(m_size.m_height);
        m_view->DrawLabel(m_position.m_column, m_position.m_row, m_labelText);
    }

}}//qor::components