// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PP_H_COMPONENTS_FRAMEWORK_CONSOLE
#define QOR_PP_H_COMPONENTS_FRAMEWORK_CONSOLE

#include "src/framework/role/ifeature.h"
#include "iconsole.h"

namespace qor
{
    bool qor_pp_import ImplementsIConsole();//All libraries providing an implementation of IConsole also need to export this function so that the linker can find them
}

namespace qor { namespace components {

        class qor_pp_module_interface(QOR_CONSOLE) Console : public framework::IFeature
        {
        public:

            Console();
            ~Console() noexcept = default;

            virtual void Setup() {}
            virtual void Shutdown() {}

            string_t ReadLine();
            void WriteLine(string_t line);
            char_t ReadChar();
            void WriteChar(char_t c);

        private:

            ref_of<IConsole>::type m_pimpl;
        };

    }//qor::components

    constexpr GUID ConsoleGUID = { 0xc4277aad, 0x3a81, 0x4f19, {0xba, 0x77, 0x2d, 0xaa, 0xa1, 0x1a, 0x9f, 0x0a} };
    qor_pp_declare_guid_of(components::Console, ConsoleGUID);

}//qor

#endif//QOR_PP_H_COMPONENTS_FRAMEWORK_CONSOLE
