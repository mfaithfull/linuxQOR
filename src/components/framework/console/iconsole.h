// Copyright Querysoft Limited 2008 - 2025
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.

#ifndef QOR_PP_H_COMPONENTS_FRAMEWORK_CONSOLE_INTERFACE
#define QOR_PP_H_COMPONENTS_FRAMEWORK_CONSOLE_INTERFACE

#include "src/qor/injection/typeidentity.h"
#include "src/qor/instance/singleton.h"
#include "src/qor/factory/factory.h"
#include "src/qor/factory/externalfactory.h"
#include "src/qor/reference/reference.h"

namespace qor { namespace components {

        class qor_pp_module_interface(QOR_CONSOLE) IConsole
        {
        public:

            IConsole() = default;
            virtual ~IConsole() noexcept = default;

            virtual void Setup() {}
            virtual void Shutdown() {}

            virtual string_t ReadLine()
            {
                return string_t();
            }

            virtual void WriteLine(string_t line){}
            
            virtual char_t ReadChar()
            {
                return 0;
            }

            virtual void WriteChar(char_t c) {}

        };

    }//qor::components

    qor_pp_declare_instancer_of(components::IConsole, SingletonInstancer);
    qor_pp_declare_factory_of(components::IConsole, ExternalFactory);
    constexpr GUID IConsoleGUID = { 0xcbcea0af, 0x9f81, 0x4644, { 0x88, 0x5d, 0x61, 0x80, 0x8a, 0x25, 0x48, 0x56} };
    qor_pp_declare_guid_of(components::IConsole, IConsoleGUID);

}//qor

#endif//QOR_PP_H_COMPONENTS_FRAMEWORK_CONSOLE_INTERFACE
